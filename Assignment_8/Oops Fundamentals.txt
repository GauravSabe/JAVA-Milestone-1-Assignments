Assignment_8

Oops Fundamentals 

 1.How to Create an Object in Java ?
→ 1. We can use the "new" operator to create an object.
2. There is no "delete" operator in java because destruction of useless objects is
the responsibility of the garbage collector.  
* Example : 
class Test 
{
String name;
int a;
public static void main(String[] args) 
{
Test t = new Test();
}
}


 2.What is the use of a new keyword in Java ?
→ new operator is a keyword which is used to create the Object.
* Example : class_name obj_name = new class_name();
    

 3.What are the different types of variables in Java ?
→Types of Variables :  
Division 1 :
Based on the type of value represented by a variable all variables are divided into 2 types. 
They are :
1. Primitive variables 
2. Reference variables
Primitive variables : 
* Primitive variables can be used to represent primitive values. 
* Example: int x=10;
Reference variables : 
* Reference variables can be used to refer objects. Example: Student s=new Student();   
Division 2 :
Based on the behavior and position of declaration all variables are divided into the following 3 types.
1. Instance variables : 
* If the value of a variable is varied from object to object such types of variables are called instance
variables.
2. Local variables : 
   * Sometimes to meet temporary requirements of the programmer we can declare variables inside a method
or block or constructors such types of variables are called local variables or automatic variables or temporary variables or stack variables.
3. Static variables.


 4.What is the difference between Instance variable and local variables ?
→Instance variables are variables within a class but outside any method.
      * These variables are instantiated when the class is loaded. 
    →Local variables are declared within a method. 
      * Instance variables are declared inside a class but not within a method.


 5.In which area memory is allocated for instance variable and local variable ?
→ 1.Instance variable : Stack memory
2.Local variable : Heap memory


6.What is method overloading ? 
→Two methods are said to be overloaded if and only if both have the same name but different argument types.
      * In the 'C' language we can't take 2 methods with the same name and different types. If there is a change in argument type compulsory we should go for a new method name.

         * Example : 
abs() for int datatype
abs() for long datatype 
abs() for float datatype
         * Lack of overloading in "C" increases complexity of the programming.
         * But in java we can take multiple methods with the same name and different argument types. 
abs(int) for int datatype
abs(long) for long datatype
abs(float) for float datatype
         *  Having the same name and different argument types is called method overloading. All these methods are
considered as overloaded methods.
         * Having overloading concept in java reduces complexity of the programming